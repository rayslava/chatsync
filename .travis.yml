language: cpp
compiler:
    - clang
    - gcc
before_install:
    - sudo add-apt-repository --yes ppa:h-rayflood/llvm
    - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
    - sudo add-apt-repository --yes ppa:yjwong/cmake
    - sudo add-apt-repository --yes ppa:george-edison55/precise-backports
    - sudo add-apt-repository --yes 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.8 main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get -qq update
    - sudo apt-get -qq --yes --force-yes install libclang-3.8-dev clang-3.8 gcc-5 g++-5 valgrind lcov cmake cmake-data build-essential libtool autotools-dev automake checkinstall check git yasm
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 40 --slave /usr/bin/g++ g++ /usr/bin/g++-5
    - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 40
    - sudo update-alternatives --config gcc
    - sudo update-alternatives --config gcov
    - export LD_LIBRARY_PATH=/usr/lib/llvm-3.8/lib/
    - export PATH=/usr/lib/llvm-3.8/bin:$PATH
    - sudo pip install cpp-coveralls
    - cd $(mktemp -d) && git clone https://github.com/google/googletest.git && cd googletest && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=/usr .. && make VERBOSE=1 && sudo make VERBOSE=1 install && sudo ldconfig
    - cd $(mktemp -d)
    - wget 'http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.12.src.tar.gz'
    - tar xf doxygen-1.8.12.src.tar.gz
    - cd doxygen-1.8.12 && mkdir build && cd build
    - cmake -G "Unix Makefiles" ..
    - make -j4
    - sudo make install
    - cd $(mktemp -d) && git clone git://github.com/jedisct1/libsodium.git && cd libsodium &&  git checkout tags/1.0.11 &&  ./autogen.sh &&  ./configure --enable-static --prefix=/usr && make check && sudo checkinstall --install --pkgname libsodium --pkgversion 1.0.11 --nodoc < /dev/null && sudo ldconfig
    - cd $(mktemp -d) && git clone git://github.com/irungentoo/toxcore.git && cd toxcore &&  CC=gcc autoreconf -i && CC=gcc ./configure --enable-static && CC=gcc make && sudo make install && sudo ldconfig
    - cd $TRAVIS_BUILD_DIR
matrix:
    include:
        - compiler: gcc
          env: VALGRIND="yes" CMAKE_BUILD_TYPE="Release"
        - compiler: gcc
          env:
              - VALGRIND="yes"
              - DOCS="yes"
              - CMAKE_BUILD_TYPE="Debug"
              - secure: "mRyQKieh/WCxeSmANDeXxzEt+ARvk+m+ypg5Xevi8ykZXMQJsUskFE4vde7+OrfB/4E4ByE8PTqaAdudw3AGUOfetwqXLBs3yLp4J+nw4m3uyUmu8ugbgbuvKVl5+puRRpDX6CFCeq9qAZwuYoAJ/pCTyXhWx4MknqtkSarTIdc="
        - compiler: gcc
          env: COVERAGE="true" CMAKE_BUILD_TYPE="Debug"
script:
    - mkdir build
    - cd build
    - cmake .. -DGTEST_BOTH_LIBRARIES="/usr/lib/libgtest.a /usr/lib/libgtest_main.a" -DCOVERALLS=${COVERAGE} -DSTATIC=${STATIC} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DTRAVIS_BUILD=True
    - make VERBOSE=1 -j1 JOBS=1
    - ctest -V -j1
    - if [ "x$VALGRIND" != "x" ]; then (valgrind --tool=memcheck --track-origins=yes --leak-check=full --trace-children=yes --show-reachable=yes ./unit_tests 2>/tmp/unit-test-valg-unit_tests.log)</dev/null && sed '/in use/!d;s/.*exit:.*\s\([[:digit:]]\+\)\sblocks.*/\1/' /tmp/unit-test-valg-unit_tests.log | { read lines; test $$lines -eq 1 || cat /tmp/unit-test-valg-unit_tests.log; }; fi
    - if [ "x$COVERAGE" != "x" ]; then make V=1 VERBOSE=1 -j1 JOBS=1 coveralls; fi
after_success:
    - if [ "x$COVERAGE" != "x" ]; then bash coveralls-upload || coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" ; fi
    - if [ "x$DOCS" != "x" ]; then cd .. && bash scripts/publish-doxygen.sh; fi
